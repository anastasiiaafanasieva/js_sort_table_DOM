{"version":3,"sources":["scripts/main.js"],"names":["tBody","document","querySelector","tr","querySelectorAll","tHead","th","isSorted","columnName","arrayOfEmployees","createArrayOfEmployees","sort","a","b","localeCompare","stringToNumber","i","length","counter","value","rows","cells","textContent","getPersonsAttributes","element","personsAttributes","push","employeeData","person","children","string","split","join","replace","addEventListener","e","target"],"mappings":"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","file":"main.4add59a6.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst tBody = document.querySelector('tbody');\nconst tr = tBody.querySelectorAll('tr');\nconst tHead = document.querySelector('thead');\nconst th = tHead.querySelectorAll('th');\n\ntHead.addEventListener('click', (e) => {\n  const item = e.target.textContent;\n\n  isSorted(item);\n});\n\nfunction isSorted(columnName) {\n  const arrayOfEmployees = createArrayOfEmployees(tr);\n\n  if (columnName === 'Name' || columnName === 'Position') {\n    arrayOfEmployees.sort((a, b) => a[columnName].localeCompare(b[columnName]));\n  } else {\n    arrayOfEmployees.sort((a, b) => stringToNumber(a[columnName])\n      - stringToNumber(b[columnName]));\n  }\n\n  for (let i = 0; i < arrayOfEmployees.length; i++) {\n    let counter = 0;\n\n    for (const value in arrayOfEmployees[i]) {\n      tBody.rows[i].cells[counter].textContent = arrayOfEmployees[i][value];\n      counter++;\n    }\n  }\n}\n\nfunction getPersonsAttributes(element) {\n  const personsAttributes = [];\n\n  for (const value of element) {\n    personsAttributes.push(value.textContent);\n  }\n\n  return personsAttributes;\n}\n\nfunction createArrayOfEmployees(element) {\n  const arrayOfEmployees = [];\n  const personsAttributes = getPersonsAttributes(th);\n\n  for (const employeeData of element) {\n    const person = {};\n\n    for (let i = 0; i < employeeData.children.length; i++) {\n      person[personsAttributes[i]] = employeeData.children[i].textContent;\n    }\n\n    arrayOfEmployees.push(person);\n  }\n\n  return arrayOfEmployees;\n}\n\nfunction stringToNumber(string) {\n  const resultNumber = string.split(',').join('').replace('$', '');\n\n  return +resultNumber;\n}\n"]}